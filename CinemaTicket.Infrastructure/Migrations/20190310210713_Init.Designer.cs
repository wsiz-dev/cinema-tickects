// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CinemaTickets.Infrastructure.Migrations
{
    [DbContext(typeof(CinemaTicketDbContext))]
    [Migration("20190310210713_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CinemaTickets.Domain.Entities.Movie", b =>
                {
                    b.Property<Guid>("Id");

                    b.Property<string>("Name");

                    b.Property<int>("SeanceTime");

                    b.Property<int>("Year");

                    b.HasKey("Id");

                    b.ToTable("Movies");

                    b.HasData(
                        new { Id = new Guid("10f49274-7c65-478d-b5c9-e43395b6169f"), Name = "Harry Potter i Czara Ognia", SeanceTime = 150, Year = 2010 },
                        new { Id = new Guid("408e83b0-9f63-46d5-8721-6426577d5f9c"), Name = "Szybcy i wściekli 8", SeanceTime = 180, Year = 2018 },
                        new { Id = new Guid("d622f2ee-a361-458c-ba01-04246bbe9547"), Name = "Alita", SeanceTime = 120, Year = 2019 }
                    );
                });

            modelBuilder.Entity("CinemaTickets.Domain.Entities.Room", b =>
                {
                    b.Property<Guid>("Id");

                    b.Property<int>("RoomNumber");

                    b.Property<int>("Seats");

                    b.HasKey("Id");

                    b.ToTable("Rooms");

                    b.HasData(
                        new { Id = new Guid("b837f013-9d92-4ec1-8a33-00f1fe15b14a"), RoomNumber = 1, Seats = 50 },
                        new { Id = new Guid("772e49b0-099e-4db7-956c-6c545e4fd2fb"), RoomNumber = 2, Seats = 50 },
                        new { Id = new Guid("ca035fa8-afc6-4118-83f0-ca151746354b"), RoomNumber = 3, Seats = 50 }
                    );
                });

            modelBuilder.Entity("CinemaTickets.Domain.Entities.Seance", b =>
                {
                    b.Property<Guid>("Id");

                    b.Property<DateTime>("Date");

                    b.Property<Guid?>("MovieId");

                    b.Property<Guid?>("RoomId");

                    b.HasKey("Id");

                    b.HasIndex("MovieId");

                    b.HasIndex("RoomId");

                    b.ToTable("Seances");

                    b.HasData(
                        new { Id = new Guid("dbf18a4f-753e-492c-8854-098606d3a007"), Date = new DateTime(2019, 3, 10, 18, 30, 0, 0, DateTimeKind.Unspecified), MovieId = new Guid("10f49274-7c65-478d-b5c9-e43395b6169f"), RoomId = new Guid("b837f013-9d92-4ec1-8a33-00f1fe15b14a") },
                        new { Id = new Guid("7def3843-86a2-48f4-ba56-8c84d97c8ef5"), Date = new DateTime(2019, 3, 10, 22, 30, 0, 0, DateTimeKind.Unspecified), MovieId = new Guid("408e83b0-9f63-46d5-8721-6426577d5f9c"), RoomId = new Guid("772e49b0-099e-4db7-956c-6c545e4fd2fb") },
                        new { Id = new Guid("bcfc5140-9812-4367-85ef-15ab0d9b4b6f"), Date = new DateTime(2019, 4, 10, 18, 30, 0, 0, DateTimeKind.Unspecified), MovieId = new Guid("d622f2ee-a361-458c-ba01-04246bbe9547"), RoomId = new Guid("ca035fa8-afc6-4118-83f0-ca151746354b") }
                    );
                });

            modelBuilder.Entity("CinemaTickets.Domain.Entities.Ticket", b =>
                {
                    b.Property<Guid>("Id");

                    b.Property<string>("Email");

                    b.Property<int>("PeopleCount");

                    b.Property<DateTime>("PurchesDate");

                    b.HasKey("Id");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("CinemaTickets.Domain.Entities.Seance", b =>
                {
                    b.HasOne("CinemaTickets.Domain.Entities.Movie")
                        .WithMany("Seances")
                        .HasForeignKey("MovieId");

                    b.HasOne("CinemaTickets.Domain.Entities.Room")
                        .WithMany("Seances")
                        .HasForeignKey("RoomId");
                });
#pragma warning restore 612, 618
        }
    }
}
